@model MunicipalServices.Models.LocalEvent
@{
    ViewData["Title"] = "Create Event";
}

<div class="admin-content-wrapper">
    <!-- Header Section -->
    <div class="admin-page-header mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="admin-title">
                    <i class="fas fa-plus-circle me-3 text-success"></i>
                    Create New Event
                </h1>
                <p class="admin-subtitle">Add a new local event or announcement to the system</p>
            </div>
            <div>
                <a asp-action="Events" class="btn btn-outline-secondary me-2">
                    <i class="fas fa-list me-2"></i>View All Events
                </a>
                <a asp-action="Dashboard" class="btn btn-outline-primary">
                    <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
                </a>
            </div>
        </div>
    </div>

    <!-- Success/Error Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Form Card -->
    <div class="card border-0 shadow-lg">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">
                <i class="fas fa-edit me-2"></i>Event Information
            </h5>
        </div>
        <div class="card-body p-4">
            <form asp-action="CreateEvent" method="post" id="createEventForm" class="needs-validation" novalidate>
                @Html.AntiForgeryToken()

                <!-- Validation Summary -->
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <h6><i class="fas fa-exclamation-circle me-2"></i>Please correct the following errors:</h6>
                        <ul class="mb-0 mt-2">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                <div class="row g-4">
                    <!-- Left Column -->
                    <div class="col-lg-8">
                        <!-- Event Title -->
                        <div class="form-group mb-4">
                            <label asp-for="Title" class="form-label fw-bold">
                                <i class="fas fa-heading me-2 text-primary"></i>Event Title <span class="text-danger">*</span>
                            </label>
                            <input asp-for="Title" class="form-control form-control-lg"
                                   placeholder="Enter event title..." maxlength="200" required>
                            <span asp-validation-for="Title" class="text-danger"></span>
                            <div class="invalid-feedback">
                                Please provide a valid event title.
                            </div>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>Choose a clear, descriptive title for your event
                            </div>
                        </div>

                        <!-- Event Description -->
                        <div class="form-group mb-4">
                            <label asp-for="Description" class="form-label fw-bold">
                                <i class="fas fa-align-left me-2 text-primary"></i>Event Description <span class="text-danger">*</span>
                            </label>
                            <textarea asp-for="Description" class="form-control" rows="6"
                                      placeholder="Provide detailed information about the event..."
                                      maxlength="1000" required oninput="updateCharCount(this)"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                            <div class="invalid-feedback">
                                Please provide a valid event description.
                            </div>
                            <div class="d-flex justify-content-between">
                                <div class="form-text">
                                    <i class="fas fa-info-circle me-1"></i>Include important details, requirements, and what attendees can expect
                                </div>
                                <small id="descCharCount" class="text-muted">0/1000 characters</small>
                            </div>
                        </div>

                        <!-- Location -->
                        <div class="form-group mb-4">
                            <label asp-for="Location" class="form-label fw-bold">
                                <i class="fas fa-map-marker-alt me-2 text-danger"></i>Location
                            </label>
                            <input asp-for="Location" class="form-control"
                                   placeholder="e.g., Municipal Hall, Main Street, City Center..." maxlength="200">
                            <span asp-validation-for="Location" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>Provide the exact location where the event will take place
                            </div>
                        </div>
                    </div>

                    <!-- Right Column -->
                    <div class="col-lg-4">
                        <!-- Event Date -->
                        <div class="form-group mb-4">
                            <label asp-for="EventDate" class="form-label fw-bold">
                                <i class="fas fa-calendar-alt me-2 text-primary"></i>Event Date & Time <span class="text-danger">*</span>
                            </label>
                            <input asp-for="EventDate" class="form-control" type="datetime-local" required>
                            <span asp-validation-for="EventDate" class="text-danger"></span>
                            <div class="invalid-feedback">
                                Please select an event date and time.
                            </div>
                            <div class="form-text">
                                <i class="fas fa-clock me-1"></i>When will this event take place?
                            </div>
                        </div>

                        <!-- Category -->
                        <div class="form-group mb-4">
                            <label asp-for="Category" class="form-label fw-bold">
                                <i class="fas fa-tags me-2 text-warning"></i>Event Category <span class="text-danger">*</span>
                            </label>
                            <select asp-for="Category" class="form-select" required>
                                <option value="">Select a category...</option>
                                <option value="Community">Community</option>
                                <option value="Education">Education</option>
                                <option value="Infrastructure">Infrastructure</option>
                                <option value="Health & Safety">Health & Safety</option>
                                <option value="Environment">Environment</option>
                                <option value="Recreation">Recreation</option>
                                <option value="Government">Government</option>
                                <option value="Emergency">Emergency</option>
                                <option value="Cultural">Cultural</option>
                                <option value="Other">Other</option>
                            </select>
                            <span asp-validation-for="Category" class="text-danger"></span>
                            <div class="invalid-feedback">
                                Please select a category for the event.
                            </div>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>Choose the most appropriate category
                            </div>
                        </div>

                        <!-- Priority -->
                        <div class="form-group mb-4">
                            <label asp-for="Priority" class="form-label fw-bold">
                                <i class="fas fa-exclamation-triangle me-2 text-danger"></i>Priority Level
                            </label>
                            <select asp-for="Priority" class="form-select">
                                <option value="1">1 - Low Priority</option>
                                <option value="2">2 - Normal</option>
                                <option value="3" selected>3 - Important</option>
                                <option value="4">4 - High Priority</option>
                                <option value="5">5 - Critical/Urgent</option>
                            </select>
                            <span asp-validation-for="Priority" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>Higher priority events appear more prominently
                            </div>
                        </div>

                        <!-- Status -->
                        <div class="form-group mb-4">
                            <div class="form-check">
                                <input asp-for="IsActive" class="form-check-input" type="checkbox" checked>
                                <label asp-for="IsActive" class="form-check-label fw-bold">
                                    <i class="fas fa-eye me-2 text-success"></i>Active Event
                                </label>
                                <div class="form-text">
                                    <i class="fas fa-info-circle me-1"></i>Only active events are visible to the public
                                </div>
                            </div>
                        </div>

                        <!-- Preview Card -->
                        <div class="card border-info">
                            <div class="card-header bg-info text-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-eye me-2"></i>Preview
                                </h6>
                            </div>
                            <div class="card-body" id="eventPreview">
                                <div class="text-muted text-center py-3">
                                    <i class="fas fa-calendar-alt fa-2x mb-2"></i>
                                    <p>Fill in the form to see a preview of your event</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Form Actions -->
                <div class="d-flex justify-content-between align-items-center mt-4 pt-4 border-top">
                    <div class="form-text text-muted">
                        <i class="fas fa-info-circle me-1"></i>
                        Fields marked with <span class="text-danger">*</span> are required
                    </div>
                    <div class="btn-group">
                        <a asp-action="Events" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-2"></i>Cancel
                        </a>
                        <button type="submit" class="btn btn-success btn-lg" id="submitBtn">
                            <i class="fas fa-plus-circle me-2"></i>Create Event
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    /* Form validation styles */
    .was-validated .form-control:invalid,
    .was-validated .form-select:invalid,
    .was-validated .form-check-input:invalid {
        border-color: #dc3545;
    }

    .was-validated .form-control:valid,
    .was-validated .form-select:valid,
    .was-validated .form-check-input:valid {
        border-color: #28a745;
    }

    .form-control.is-invalid,
    .form-select.is-invalid {
        border-color: #dc3545;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right calc(0.375em + 0.1875rem) center;
        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }

    .form-control.is-valid,
    .form-select.is-valid {
        border-color: #28a745;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right calc(0.375em + 0.1875rem) center;
        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }

    .event-preview {
        transition: all 0.3s ease;
    }

    .drag-over {
        border-color: #28a745 !important;
        background: #e8f5e9 !important;
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Character count for description
        function updateCharCount(textarea) {
            const count = textarea.value.length;
            const counter = document.getElementById('descCharCount');
            counter.textContent = count + '/1000 characters';

            if (count > 900) {
                counter.className = 'text-warning';
            } else if (count > 950) {
                counter.className = 'text-danger';
            } else {
                counter.className = 'text-muted';
            }

            updatePreview();
        }

        // Live preview update
        function updatePreview() {
            const title = document.getElementById('Title').value || 'Event Title';
            const description = document.getElementById('Description').value || 'Event description...';
            const category = document.getElementById('Category').value || 'Category';
            const location = document.getElementById('Location').value || 'Location TBD';
            const eventDate = document.getElementById('EventDate').value;
            const priority = document.getElementById('Priority').value || '3';

            let dateFormatted = 'Date TBD';
            if (eventDate) {
                const date = new Date(eventDate);
                dateFormatted = date.toLocaleDateString('en-US', {
                    weekday: 'long',
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                });
            }

            const priorityBadge = priority >= 4 ? 'bg-danger' : priority >= 3 ? 'bg-warning text-dark' : 'bg-success';
            const priorityText = priority >= 4 ? 'High' : priority >= 3 ? 'Medium' : 'Low';

            const previewHtml = `
                <div class="event-preview">
                    <div class="d-flex justify-content-between align-items-start mb-2">
                        <h6 class="mb-0">${title}</h6>
                        <span class="badge ${priorityBadge}">${priorityText}</span>
                    </div>
                    <div class="mb-2">
                        <small class="text-muted">
                            <i class="fas fa-tags me-1"></i>${category}
                        </small>
                    </div>
                    <div class="mb-2">
                        <small class="text-muted">
                            <i class="fas fa-calendar me-1"></i>${dateFormatted}
                        </small>
                    </div>
                    <div class="mb-2">
                        <small class="text-muted">
                            <i class="fas fa-map-marker-alt me-1"></i>${location}
                        </small>
                    </div>
                    <p class="small text-muted mb-0">${description.substring(0, 100)}${description.length > 100 ? '...' : ''}</p>
                </div>
            `;

            document.getElementById('eventPreview').innerHTML = previewHtml;
        }

        // Form validation and submission handling
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('createEventForm');
            const submitBtn = document.getElementById('submitBtn');
            let isSubmitting = false;

            // Set minimum date to today
            const eventDateInput = document.getElementById('EventDate');
            const now = new Date();
            now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
            eventDateInput.min = now.toISOString().slice(0, 16);

            // Add event listeners for live preview
            document.querySelectorAll('#createEventForm input, #createEventForm select, #createEventForm textarea').forEach(input => {
                input.addEventListener('input', updatePreview);
                input.addEventListener('change', updatePreview);

                // Add validation feedback
                input.addEventListener('blur', function() {
                    if (this.hasAttribute('required')) {
                        if (this.checkValidity()) {
                            this.classList.remove('is-invalid');
                            this.classList.add('is-valid');
                        } else {
                            this.classList.remove('is-valid');
                            this.classList.add('is-invalid');
                        }
                    }
                });

                // Remove validation classes on focus
                input.addEventListener('focus', function() {
                    this.classList.remove('is-invalid');
                    this.classList.remove('is-valid');
                });
            });

            // Initial preview update
            updatePreview();

            form.addEventListener('submit', function(e) {
                if (isSubmitting) {
                    e.preventDefault();
                    return false;
                }

                // Check form validity
                if (!form.checkValidity()) {
                    // Prevent submission
                    e.preventDefault();
                    e.stopPropagation();

                    // Add validation class to show errors
                    form.classList.add('was-validated');

                    // Find first invalid field and focus it
                    const firstInvalid = form.querySelector(':invalid');
                    if (firstInvalid) {
                        firstInvalid.focus();

                        // Show alert for better UX
                        const alertHtml = `
                            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                Please fill in all required fields before submitting.
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            </div>
                        `;

                        // Insert alert at top of form if not already there
                        const existingAlert = form.querySelector('.alert-warning');
                        if (!existingAlert) {
                            form.insertAdjacentHTML('afterbegin', alertHtml);
                        }
                    }

                    return false;
                }

                // Form is valid, mark as submitting
                isSubmitting = true;

                // Update button to show loading
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Creating Event...';
                submitBtn.disabled = true;

                setTimeout(function() {
                    // Check if we're still on the same page (not redirected)
                    if (document.getElementById('submitBtn') && submitBtn.disabled) {
                        submitBtn.innerHTML = '<i class="fas fa-plus-circle me-2"></i>Create Event';
                        submitBtn.disabled = false;
                        isSubmitting = false;

                        // Show error message if we're still here after 10 seconds
                        const errorAlert = `
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                <i class="fas fa-exclamation-circle me-2"></i>
                                The submission is taking longer than expected. Please try again.
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            </div>
                        `;

                        const existingError = form.querySelector('.alert-danger');
                        if (!existingError) {
                            form.insertAdjacentHTML('afterbegin', errorAlert);
                        }
                    }
                }, 10000);

            });

            // Alternative: Handle button click separately
            submitBtn.addEventListener('click', function(e) {
                // Only handle if form is invalid
                if (!form.checkValidity()) {
                    e.preventDefault();

                    // Trigger form validation
                    form.classList.add('was-validated');

                    // Find and focus first invalid field
                    const firstInvalid = form.querySelector(':invalid');
                    if (firstInvalid) {
                        firstInvalid.focus();
                    }

                    return false;
                }
            });

            // Remove validation styling when user starts typing
            form.addEventListener('input', function(e) {
                if (e.target.tagName === 'INPUT' || e.target.tagName === 'SELECT' || e.target.tagName === 'TEXTAREA') {
                    if (e.target.value && e.target.hasAttribute('required')) {
                        e.target.classList.remove('is-invalid');
                    }
                }
            });

            // Clear any previous form state on page load
            submitBtn.innerHTML = '<i class="fas fa-plus-circle me-2"></i>Create Event';
            submitBtn.disabled = false;
        });
    </script>
}