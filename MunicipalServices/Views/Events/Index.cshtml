@model MunicipalServices.Models.EventSearchViewModel
@{
    ViewData["Title"] = "Local Events & Announcements";
}

<!-- Include required CSS and JS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">

<style>
    :root {
        --primary-color: #6366f1;
        --secondary-color: #8b5cf6;
        --success-color: #10b981;
        --warning-color: #f59e0b;
        --danger-color: #ef4444;
        --dark-color: #1f2937;
        --light-color: #f8fafc;
        --border-radius: 20px;
        --shadow: 0 10px 30px rgba(0,0,0,0.1);
        --shadow-hover: 0 20px 60px rgba(0,0,0,0.2);
    }

    * {
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', sans-serif;
        background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
        line-height: 1.6;
    }

    /* Hero Section */
    .hero-section {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
        color: white;
        padding: 4rem 0;
        border-radius: var(--border-radius);
        margin: 2rem auto;
        position: relative;
        overflow: hidden;
        box-shadow: var(--shadow);
    }

        .hero-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            opacity: 0.3;
        }

    .hero-content {
        position: relative;
        z-index: 2;
    }

    .hero-title {
        font-size: 3rem;
        font-weight: 800;
        margin-bottom: 1rem;
        text-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .hero-subtitle {
        font-size: 1.2rem;
        opacity: 0.95;
        font-weight: 300;
    }

    .stats-card {
        background: rgba(255, 255, 255, 0.15);
        border-radius: var(--border-radius);
        padding: 2rem;
        text-align: center;
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        transition: all 0.3s ease;
    }

        .stats-card:hover {
            transform: translateY(-5px);
            background: rgba(255, 255, 255, 0.2);
        }

    .stat-number {
        font-size: 3rem;
        font-weight: 900;
        color: #fbbf24;
        text-shadow: 0 4px 8px rgba(0,0,0,0.3);
    }

    /* Search Section */
    .search-section {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        padding: 2rem;
        margin: 2rem auto;
        border: none;
        transition: all 0.3s ease;
    }

        .search-section:hover {
            box-shadow: var(--shadow-hover);
        }

    .form-label {
        color: var(--dark-color);
        font-weight: 600;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-control, .form-select {
        border-radius: 15px;
        border: 2px solid #e5e7eb;
        padding: 1rem;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: #f9fafb;
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.1);
            background: white;
            outline: none;
        }

    .btn {
        border-radius: 15px;
        padding: 1rem 2rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        border: none;
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
        color: white;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(99, 102, 241, 0.4);
        }

    .btn-outline-secondary {
        border: 2px solid #e5e7eb;
        color: #6b7280;
        background: white;
    }

        .btn-outline-secondary:hover {
            background: #f3f4f6;
            transform: translateY(-2px);
        }

    .btn-outline-danger {
        border: 2px solid var(--danger-color);
        color: var(--danger-color);
        background: white;
    }

        .btn-outline-danger:hover {
            background: var(--danger-color);
            color: white;
            transform: translateY(-2px);
        }

    .btn-warning {
        background: linear-gradient(135deg, var(--warning-color) 0%, #f97316 100%);
        color: white;
    }

        .btn-warning:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(245, 158, 11, 0.4);
        }

    /* Active Filters */
    .active-filters .card {
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        border: none;
        border-radius: 15px;
        box-shadow: var(--shadow);
    }

    .badge {
        padding: 0.5rem 1rem;
        border-radius: 25px;
        font-size: 0.8rem;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        margin: 0.25rem;
    }

        .badge.bg-primary {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%) !important;
        }

        .badge.bg-success {
            background: linear-gradient(135deg, var(--success-color) 0%, #059669 100%) !important;
        }

        .badge.bg-info {
            background: linear-gradient(135deg, #06b6d4 0%, #0891b2 100%) !important;
        }

        .badge.bg-warning {
            background: linear-gradient(135deg, var(--warning-color) 0%, #f97316 100%) !important;
            color: white !important;
        }

        .badge.bg-secondary {
            background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%) !important;
        }

    .btn-close-white {
        filter: invert(1);
        opacity: 0.8;
    }

    /* Recommendations */
    .recommendations-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        border: none;
        overflow: hidden;
        transition: all 0.3s ease;
    }

        .recommendations-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-hover);
        }

    .card-header {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
        color: white;
        border: none;
        padding: 1.5rem;
        font-weight: 600;
    }

        .card-header.bg-warning {
            background: linear-gradient(135deg, var(--warning-color) 0%, #f97316 100%) !important;
            color: white !important;
        }

    .quick-search {
        border-radius: 20px;
        transition: all 0.3s ease;
        border: 2px solid #e2e8f0;
        background: white;
        padding: 0.5rem 1rem;
        font-size: 0.85rem;
    }

        .quick-search:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.1);
            border-color: var(--primary-color);
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
        }

    /* Event Cards */
    .event-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        transition: all 0.3s ease;
        overflow: hidden;
        border: none;
        height: 100%;
        display: flex;
        flex-direction: column;
        animation: slideInUp 0.6s ease forwards;
    }

        .event-card:hover {
            transform: translateY(-10px);
            box-shadow: var(--shadow-hover);
        }

    .event-header {
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        padding: 1.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .event-date {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
        color: white;
        border-radius: 15px;
        padding: 1rem;
        text-align: center;
        min-width: 80px;
        box-shadow: 0 4px 15px rgba(99, 102, 241, 0.3);
    }

        .event-date .day {
            font-size: 1.8rem;
            font-weight: 900;
            line-height: 1;
        }

        .event-date .month {
            font-size: 0.8rem;
            opacity: 0.9;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-weight: 600;
        }

    .event-priority {
        display: flex;
        gap: 3px;
    }

        .event-priority i {
            font-size: 1.2rem;
        }

        .event-priority.priority-1 {
            color: var(--success-color);
        }

        .event-priority.priority-2 {
            color: #3b82f6;
        }

        .event-priority.priority-3 {
            color: var(--warning-color);
        }

        .event-priority.priority-4 {
            color: #f97316;
        }

        .event-priority.priority-5 {
            color: var(--danger-color);
        }

    .event-content {
        padding: 2rem;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    .event-category .badge {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%) !important;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 25px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .event-title {
        font-size: 1.3rem;
        font-weight: 700;
        color: var(--dark-color);
        margin: 1rem 0;
        line-height: 1.3;
    }

    .event-description {
        color: #6b7280;
        line-height: 1.7;
        margin-bottom: 1rem;
        flex-grow: 1;
    }

    .event-location {
        color: var(--danger-color);
        font-size: 0.9rem;
        margin-bottom: 1rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .event-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-top: 2px solid #f3f4f6;
        padding-top: 1rem;
        margin: 1rem 0;
    }

        .event-meta small {
            font-size: 0.8rem;
            color: #9ca3af;
            display: flex;
            align-items: center;
            gap: 0.3rem;
        }

    .event-footer {
        padding: 0 2rem 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .event-footer .btn-primary {
            padding: 0.75rem 1.5rem;
            border-radius: 25px;
        }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
    }

        .empty-state i {
            font-size: 4rem;
            color: #d1d5db;
            margin-bottom: 1.5rem;
        }

        .empty-state h4 {
            color: var(--dark-color);
            font-weight: 600;
            margin-bottom: 1rem;
        }

        .empty-state p {
            color: #6b7280;
            font-size: 1.1rem;
            max-width: 500px;
            margin: 0 auto 2rem;
        }

    /* Animations */
    @@keyframes slideInUp {
        from

    {
        opacity: 0;
        transform: translateY(50px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .event-card:nth-child(1) {
        animation-delay: 0.1s;
    }

    .event-card:nth-child(2) {
        animation-delay: 0.2s;
    }

    .event-card:nth-child(3) {
        animation-delay: 0.3s;
    }

    .event-card:nth-child(4) {
        animation-delay: 0.4s;
    }

    .event-card:nth-child(5) {
        animation-delay: 0.5s;
    }

    .event-card:nth-child(6) {
        animation-delay: 0.6s;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .hero-title

    {
        font-size: 2rem;
    }

    .hero-section {
        padding: 3rem 0;
    }

    .search-section {
        padding: 1.5rem;
    }

    .event-content {
        padding: 1.5rem;
    }

    .event-footer {
        padding: 0 1.5rem 1.5rem;
        flex-direction: column;
        gap: 1rem;
    }

    .btn {
        width: 100%;
    }

    }
</style>

<!-- Hero Section -->
<div class="hero-section">
    <div class="container">
        <div class="hero-content">
            <div class="row align-items-center">
                <div class="col-lg-8">
                    <h1 class="hero-title">
                        <i class="fas fa-calendar-alt me-3"></i>
                        Local Events & Announcements
                    </h1>
                    <p class="hero-subtitle">
                        Stay connected with your community through local events, announcements, and important updates.
                        Discover what's happening in your neighborhood and never miss an important community gathering.
                    </p>
                </div>
                <div class="col-lg-4">
                    <div class="stats-card">
                        <div class="stat-number">@(Model?.TotalEvents ?? 0)</div>
                        <div class="stat-label">Total Events</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Search Section -->
<div class="container">
    <div class="search-section">
        <form asp-action="Search" method="post" id="searchForm">
            @Html.AntiForgeryToken()
            <div class="row g-4">
                <div class="col-lg-3 col-md-6">
                    <label asp-for="SearchTerm" class="form-label">
                        <i class="fas fa-search text-primary"></i>Search Events
                    </label>
                    <input asp-for="SearchTerm" class="form-control"
                           placeholder="Search by title, description, or location..." />
                </div>

                <div class="col-lg-2 col-md-6">
                    <label asp-for="Category" class="form-label">
                        <i class="fas fa-tags text-primary"></i>Category
                    </label>
                    <select asp-for="Category" class="form-select">
                        <option value="">All Categories</option>
                        @if (Model?.Categories != null)
                        {
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category">@category</option>
                            }
                        }
                    </select>
                </div>

                <div class="col-lg-2 col-md-6">
                    <label asp-for="StartDate" class="form-label">
                        <i class="fas fa-calendar text-primary"></i>From Date
                    </label>
                    <input asp-for="StartDate" type="date" class="form-control" />
                </div>

                <div class="col-lg-2 col-md-6">
                    <label asp-for="EndDate" class="form-label">
                        <i class="fas fa-calendar text-primary"></i>To Date
                    </label>
                    <input asp-for="EndDate" type="date" class="form-control" />
                </div>

                <div class="col-lg-3 col-md-12">
                    <label class="form-label">&nbsp;</label>
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary flex-grow-1">
                            <i class="fas fa-search me-2"></i>Search
                        </button>
                        @if (!string.IsNullOrEmpty(Model?.SearchTerm) || !string.IsNullOrEmpty(Model?.Category) || Model?.StartDate.HasValue == true || Model?.EndDate.HasValue == true)
                        {
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="fas fa-times"></i>
                            </a>
                        }
                        else
                        {
                            <button type="button" class="btn btn-outline-secondary" onclick="clearSearchForm()">
                                <i class="fas fa-eraser"></i>
                            </button>
                        }
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-md-6">
                    <div class="d-flex align-items-center gap-3">
                        <label class="form-label mb-0">
                            <i class="fas fa-sort text-primary"></i>Sort by:
                        </label>
                        <select asp-for="SortBy" class="form-select" style="width: auto;" onchange="this.form.submit()">
                            <option value="date">Date</option>
                            <option value="priority">Priority</option>
                            <option value="popularity">Popularity</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6 text-end">
                    @if (!string.IsNullOrEmpty(Model?.SearchTerm) || !string.IsNullOrEmpty(Model?.Category) || Model?.StartDate.HasValue == true || Model?.EndDate.HasValue == true)
                    {
                        <div class="d-inline-flex align-items-center gap-2">
                            <span class="badge bg-info">
                                <i class="fas fa-filter me-1"></i>
                                @(Model?.FilteredEvents ?? 0) of @(Model?.TotalEvents ?? 0) events shown
                            </span>
                            <a asp-action="Index" class="btn btn-sm btn-warning text-dark">
                                <i class="fas fa-eye me-1"></i>Show All Events
                            </a>
                        </div>
                    }
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Active Filters Display -->
@if (!string.IsNullOrEmpty(Model?.SearchTerm) || !string.IsNullOrEmpty(Model?.Category) || Model?.StartDate.HasValue == true || Model?.EndDate.HasValue == true)
{
    <div class="active-filters">
        <div class="container">
            <div class="card">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center justify-content-between flex-wrap">
                        <div class="d-flex align-items-center gap-2 flex-wrap">
                            <span class="fw-bold text-muted">
                                <i class="fas fa-filter me-2"></i>Active Filters:
                            </span>
                            @if (!string.IsNullOrEmpty(Model.SearchTerm))
                            {
                                <span class="badge bg-primary">
                                    <i class="fas fa-search me-1"></i>@Model.SearchTerm
                                    <button type="button" class="btn-close btn-close-white ms-2"
                                            onclick="removeFilter('SearchTerm')" aria-label="Remove search term"></button>
                                </span>
                            }
                            @if (!string.IsNullOrEmpty(Model.Category))
                            {
                                <span class="badge bg-success">
                                    <i class="fas fa-tag me-1"></i>@Model.Category
                                    <button type="button" class="btn-close btn-close-white ms-2"
                                            onclick="removeFilter('Category')" aria-label="Remove category"></button>
                                </span>
                            }
                            @if (Model.StartDate.HasValue)
                            {
                                <span class="badge bg-info">
                                    <i class="fas fa-calendar me-1"></i>From: @Model.StartDate.Value.ToString("MMM dd, yyyy")
                                    <button type="button" class="btn-close btn-close-white ms-2"
                                            onclick="removeFilter('StartDate')" aria-label="Remove start date"></button>
                                </span>
                            }
                            @if (Model.EndDate.HasValue)
                            {
                                <span class="badge bg-info">
                                    <i class="fas fa-calendar me-1"></i>To: @Model.EndDate.Value.ToString("MMM dd, yyyy")
                                    <button type="button" class="btn-close btn-close-white ms-2"
                                            onclick="removeFilter('EndDate')" aria-label="Remove end date"></button>
                                </span>
                            }
                        </div>
                        <a asp-action="Index" class="btn btn-sm btn-outline-danger">
                            <i class="fas fa-times me-1"></i>Clear All Filters
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Recent Searches & Recommendations -->
@if (Model?.RecentSearches?.Any() == true || Model?.RecommendedEvents?.Any() == true)
{
    <div class="container mt-4">
        <div class="row g-4">
            @if (Model.RecentSearches?.Any() == true)
            {
                <div class="col-lg-6">
                    <div class="recommendations-card h-100">
                        <div class="card-header">
                            <h6 class="mb-0">
                                <i class="fas fa-history me-2"></i>Recent Searches
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var search in Model.RecentSearches)
                                {
                                    <button type="button" class="btn btn-sm btn-outline-secondary quick-search"
                                            data-search="@search">
                                        <i class="fas fa-clock me-1"></i>@search
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }

            @if (Model.RecommendedEvents?.Any() == true)
            {
                <div class="col-lg-6">
                    <div class="recommendations-card h-100">
                        <div class="card-header bg-warning">
                            <h6 class="mb-0">
                                <i class="fas fa-star me-2"></i>Recommended for You
                            </h6>
                        </div>
                        <div class="card-body">
                            @foreach (var recommendation in Model.RecommendedEvents.Take(3))
                            {
                                <div class="d-flex align-items-center mb-3">
                                    <i class="fas fa-bookmark text-warning me-3"></i>
                                    <div>
                                        <a asp-action="Details" asp-route-id="@recommendation.Id"
                                           class="text-decoration-none fw-bold">
                                            @recommendation.Title
                                        </a>
                                        <div class="text-muted small">
                                            <i class="fas fa-calendar me-1"></i>
                                            @recommendation.EventDate.ToString("MMM dd, yyyy")
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

<!-- Events Grid -->
<div class="container mt-4">
    @if (Model?.Events?.Any() == true)
    {
        <div class="row g-4">
            @foreach (var eventItem in Model.Events)
            {
                <div class="col-xl-4 col-lg-6">
                    <div class="event-card">
                        <div class="event-header">
                            <div class="event-date">
                                <div class="day">@eventItem.EventDate.Day</div>
                                <div class="month">@eventItem.EventDate.ToString("MMM").ToUpper()</div>
                            </div>
                            <div class="event-priority priority-@eventItem.Priority">
                                @for (int i = 0; i < eventItem.Priority; i++)
                                {
                                    <i class="fas fa-star"></i>
                                }
                        </div>
                    </div>

                    <div class="event-content">
                        <div class="event-category">
                            <span class="badge bg-primary">@eventItem.Category</span>
                        </div>

                        <h5 class="event-title">@eventItem.Title</h5>

                        <p class="event-description">
                            @(eventItem.Description?.Length > 120 ?
                                                    eventItem.Description.Substring(0, 120) + "..." :
                                                    eventItem.Description)
                    </p>

                    @if (!string.IsNullOrEmpty(eventItem.Location))
                            {
                                <div class="event-location">
                                    <i class="fas fa-map-marker-alt"></i>
                                    @eventItem.Location
                                </div>
                            }

                            <div class="event-meta">
                                <small>
                                    <i class="fas fa-eye"></i>
                                    @eventItem.ViewCount views
                                </small>
                                <small>
                                    <i class="fas fa-clock"></i>
                                    @eventItem.EventDate.ToString("MMM dd, yyyy HH:mm")
                                </small>
                            </div>
                        </div>

                        <div class="event-footer">
                            <a asp-action="Details" asp-route-id="@eventItem.Id"
                               class="btn btn-primary">
                                <i class="fas fa-info-circle me-2"></i>View Details
                            </a>

                            <div class="d-flex gap-2">
                                @if (eventItem.EventDate < DateTime.Now)
                                {
                                    <span class="badge bg-secondary">Past Event</span>
                                }
                                else if (eventItem.EventDate <= DateTime.Now.AddDays(7))
                                {
                                    <span class="badge bg-warning text-dark">This Week</span>
                                }
                                else if (eventItem.EventDate <= DateTime.Now.AddDays(30))
                                {
                                    <span class="badge bg-info">This Month</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="empty-state">
            <i class="fas fa-calendar-times"></i>
            <h4>No Events Found</h4>
            <p>
                @if (!string.IsNullOrEmpty(Model?.SearchTerm) || !string.IsNullOrEmpty(Model?.Category) || Model?.StartDate.HasValue == true || Model?.EndDate.HasValue == true)
                {
                    <text>No events match your search criteria. Try adjusting your filters or browse all events to discover what's happening in your community.</text>
                }
                else
                {
                    <text>There are currently no events available. Check back later for upcoming community events and announcements!</text>
                }
            </p>
            @if (!string.IsNullOrEmpty(Model?.SearchTerm) || !string.IsNullOrEmpty(Model?.Category) || Model?.StartDate.HasValue == true || Model?.EndDate.HasValue == true)
            {
                <a asp-action="Index" class="btn btn-primary btn-lg">
                    <i class="fas fa-list me-2"></i>View All Events
                </a>
            }
        </div>
    }
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // Clear search form
    function clearSearchForm() {
        const form = document.getElementById('searchForm');
        form.reset();
    }

    // Remove individual filter
    function removeFilter(fieldName) {
        const field = document.getElementById(fieldName);
        if (field) {
            field.value = '';
            document.getElementById('searchForm').submit();
        }
    }

    // Quick search functionality
    document.querySelectorAll('.quick-search').forEach(button => {
        button.addEventListener('click', function() {
            const searchInput = document.querySelector('input[name="SearchTerm"]');
            if (searchInput) {
                searchInput.value = this.dataset.search;
                document.getElementById('searchForm').submit();
            }
        });
    });

    // Record search analytics
    function recordSearch() {
        const searchTerm = document.querySelector('input[name="SearchTerm"]')?.value;
        const category = document.querySelector('select[name="Category"]')?.value;

        if (searchTerm || category) {
            fetch('@Url.Action("RecordSearch", "Events")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                },
                body: JSON.stringify({
                    searchTerm: searchTerm,
                    category: category
                })
            }).catch(error => console.error('Analytics error:', error));
        }
    }

    // Attach to form submit
    document.getElementById('searchForm')?.addEventListener('submit', recordSearch);

    // Keyboard shortcuts
    document.addEventListener('keydown', function(e) {
        // Ctrl+Shift+X to clear all filters
        if (e.ctrlKey && e.shiftKey && e.key === 'X') {
            e.preventDefault();
            window.location.href = '@Url.Action("Index", "Events")';
        }

        // Ctrl+F to focus search
        if (e.ctrlKey && e.key === 'f') {
            e.preventDefault();
            document.querySelector('input[name="SearchTerm"]')?.focus();
        }
    });

    // Loading animation
    document.getElementById('searchForm')?.addEventListener('submit', function() {
        const submitButton = this.querySelector('button[type="submit"]');
        if (submitButton) {
            submitButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Searching...';
            submitButton.disabled = true;
        }
    });
</script>